---------------------------------------------------------------------------------------------
-- CustomerMng용 테이블 만들기
---------------------------------------------------------------------------------------------

DROP TABLE CUS_LEVEL;
DROP TABLE CUSTOMER;
-- DROP TABLE CUSTOMER CASCADE CONSTRAINTS; 연결된 테이블과 상관없이 강제로 삭제

-- CUS_LEVEL(1:NORMAL, 2:SILVER, 3: GOLD, 4:VIP, 5:VVIP)
-- 1: NORMAL -> 0       ~  999999 (100만원 미만)
-- 2: NORMAL -> 1000000 ~ 1999999 (100만원 대)
-- 3: NORMAL -> 2000000 ~ 2999999 (200만원 대)
-- 4: NORMAL -> 3000000 ~ 3999999 (300만원 대)
-- 5: NORMAL -> 4000000 ~ 99999999999 (400만원 이상)

CREATE TABLE CUS_LEVEL (
    LEVELNO     NUMBER(1,0) PRIMARY KEY,
    LEVELNAME   VARCHAR2(20),
    LOW         NUMBER(10,0),
    HIGH        NUMBER(10,0)
);

INSERT INTO CUS_LEVEL VALUES(1,'NORMAL',0,999999);
INSERT INTO CUS_LEVEL VALUES(2,'SILVER',1000000,1999999);
INSERT INTO CUS_LEVEL VALUES(3,'GOLD',2000000,2999999);
INSERT INTO CUS_LEVEL VALUES(4,'VIP',3000000,3999999);
INSERT INTO CUS_LEVEL VALUES(5,'VVIP',4000000,999999999);

SELECT * FROM CUS_LEVEL;

DROP SEQUENCE CUS_SEQ;
CREATE SEQUENCE CUS_SEQ
  INCREMENT BY 1 
  MAXVALUE 99999 
  NOCYCLE
  NOCACHE;

CREATE TABLE CUSTOMER (
    CID     NUMBER(5)   PRIMARY KEY,
    CTEL    VARCHAR2(20),
    CNAME   VARCHAR2(20),
    CPOINT  NUMBER(10,0) DEFAULT 1000 CHECK(CPOINT>=0),
    CAMOUNT NUMBER(10,0) DEFAULT 0,
    CWITHDRAW NUMBER(1,0) DEFAULT 0,
    LEVELNO NUMBER(1,0) DEFAULT 1 REFERENCES CUS_LEVEL(LEVELNO)
);

INSERT INTO CUSTOMER VALUES (CUS_SEQ.nextval, '010-9999-9999', '홍길동', 1000, 0, 0, 1);
INSERT INTO CUSTOMER VALUES (CUS_SEQ.nextval, '010-8888-9999', '송강호', 1000, 0, 0, 1);
INSERT INTO CUSTOMER VALUES (CUS_SEQ.nextval, '010-8888-8888', '이병헌', 10000, 100000, 0, 1);
INSERT INTO CUSTOMER VALUES (CUS_SEQ.nextval, '010-7777-9999', '이지은', 100000, 2000000, 0, 3);
INSERT INTO CUSTOMER VALUES (CUS_SEQ.nextval, '010-757-7979', '김혜수', 1000000, 3999999, 0, 4);
INSERT INTO CUSTOMER VALUES (CUS_SEQ.nextval, '010-8989-9898', '강소라', 1000000, 3000000, 0, 4);
INSERT INTO CUSTOMER VALUES (CUS_SEQ.nextval, '010-5678-1234', '봉준호', 10000000, 5000000, 0, 5);


SELECT * FROM CUSTOMER;

-- 0. 고객레벨이름들 검색
SELECT LEVELNAME FROM CUS_LEVEL;

-- 1. 폰뒤4자리(FULL) 검색 -> CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 다음 레벨업까지 필요금액
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, HIGH, C.LEVELNO
FROM CUSTOMER C, CUS_LEVEL L 
WHERE C.LEVELNO=L.LEVELNO;

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, HIGH, C.LEVELNO,
       (SELECT HIGH-CAMOUNT+1 
       FROM CUSTOMER 
       WHERE CID=C.CID AND LEVELNO != 5) LEVELUP
FROM CUSTOMER C, CUS_LEVEL L
WHERE C.LEVELNO = L.LEVELNO AND CTEL LIKE '%9999';  -- "%"+TEXTFILED값

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, HIGH, 
       (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO != 5) LEVELUP
FROM CUSTOMER C, CUS_LEVEL L
WHERE C.LEVELNO = L.LEVELNO AND CTEL LIKE '%'||'9999'; -- 자바에서 숫자만 ?로 바꿔준다.

SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,        (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO != 5) LEVELUP  FROM CUSTOMER C, CUS_LEVEL L  WHERE C.LEVELNO = L.LEVELNO AND CTEL LIKE '%'||'9999';
commit;


-- 2. 고객이름검색 -> CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 다음 레벨업까지 필요금액
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, HIGH, 
       (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO != 5) LEVELUP
FROM CUSTOMER C, CUS_LEVEL L
WHERE C.LEVELNO = L.LEVELNO AND CNAME LIKE '이지은';

-- 3. 포인트로만 구매
--UPDATE CUSTOMER SET CPOINT = 1000 WHERE CID = '1';
UPDATE CUSTOMER SET CPOINT = CPOINT-1100 WHERE CID = '1';

SELECT * FROM CUSTOMER;

-- 4. 물품구매 업데이트2번 (4-1. 포인트와 누적구매금액조정 4-2. 고객레벨조정)
-- 포인트와 누적 금액조정
UPDATE CUSTOMER SET CPOINT = 10000*0.05 , CAMOUNT = CAMOUNT + 1500000
WHERE CID = 8;

SELECT * FROM CUSTOMER;

-- 고객레벨조정
UPDATE CUSTOMER SET LEVELNO = (SELECT L.LEVELNO 
                               FROM CUSTOMER C, CUS_LEVEL L 
                               WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID = 8)
                    WHERE CID = 8;
                    
SELECT CNAME, CAMOUNT, C.LEVELNO, L.LEVELNO, LOW, HIGH FROM CUSTOMER C, CUS_LEVEL L 
WHERE CAMOUNT BETWEEN LOW AND HIGH;

-- 4-1과 4-2를 한번에 처리하기
UPDATE CUSTOMER SET CPOINT = 1500000*0.05 , 
                    CAMOUNT = CAMOUNT + 1500000,
                    LEVELNO = (SELECT L.LEVELNO 
                               FROM CUSTOMER C, CUS_LEVEL L 
                               WHERE CAMOUNT + 1500000 BETWEEN LOW AND HIGH AND CID = 1)
WHERE CID = 1;

-- 5. 등급별출력 -> CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 다음 레벨업까지 필요금액
SELECT CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, HIGH, 
       (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO != 5) LEVELUP
FROM CUSTOMER C, CUS_LEVEL L
WHERE C.LEVELNO = L.LEVELNO AND C.LEVELNO = (SELECT LEVELNO FROM CUS_LEVEL WHERE LEVELNAME = 'VVIP');


-- 6. 전체출력 -> CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 다음 레벨업까지 필요금액
SELECT CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, HIGH, 
       (SELECT HIGH-CAMOUNT+1 FROM CUSTOMER WHERE CID=C.CID AND LEVELNO != 5) LEVELUP
FROM CUSTOMER C, CUS_LEVEL L
WHERE C.LEVELNO = L.LEVELNO;

-- 7. 회원가입 (고객전화와 고객이름은 입력받아서 INSERT)
INSERT INTO CUSTOMER(CID, CTEL, CNAME) VALUES (CUS_SEQ.nextval, '010-9999-8899', '홍길동');

-- 8. 번호수정 UPDATE (WHERE절에 CID로)
UPDATE CUSTOMER SET CTEL = '010-8877-9988' WHERE CID = 8;
SELECT * FROM CUSTOMER;

-- 9. 회원탈퇴 DELETE (WHERE절에 CID로)
UPDATE CUSTOMER SET CWITHDRAW = 1 WHERE CID = 8;
SELECT * FROM CUSTOMER;


SELECT (100000 * 0.05) FROM DUAL;
